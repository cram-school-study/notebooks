Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-09-11T10:15:02+09:00

====== 11 ======
Created 금요일 11 9월 2020

이것이 우분투다 공부

파일 위치 검색

find [경로][옵션][조건][action] : ㅣㄱ본파일 찾기
사용 예
- find [[/etc]] -name "*.conf" - 확장명 conf를 다 찾아라
- find [[/bin]] -size +10k -size -100k - 10kb보다 이상 100kb보다 미만을 다 찾아라
- find [[/home]] -name "*.swp" -exec rm {} \;
  -> (확장명 swp를 다 찾아라) 그 후 -exec 사이에있는 것을 실행하라 \;
  -> -exec 와 \;은 외부 명령어의 시작과 끝을 표시함

which 실행파일이름 : path에 설정된 디렉터리만 검색
whereis 실행파일이름 : 실행파일,소스,man페이지 파일까지 검색
locate 파일이름 : 파일 목록 데이터베이스에서 검색

--------------------

시스템 설정

다양한 환경 설정( unity-control-center ) - 윈도우 제어판과 비슷
네트워크 설정( nmtui )
방화벽 설정 ( ufw, gufw )
서비스 설정 ( rcconf )

apt-get -y install gufw pythton-gi
apt-get -y install rcconf


--------------------

cron과 at

cron
- 주기적으로 반복되는 일을 자동적으로 실행될 수 있도록 설정
- 관련된 데몬(서비스)은 "crond", 관련 파일은 "/etc/crontab"
- [[/etc/crontab]] 형식
 * 분 시 일 월 요일 사용자 실행명령
 * 예) 00 05 1 * * root cp -r [[/home]] [[/backup]] - 매월 매요일 

at
- 일회성 작업을 예약
- 사용 예
 * 예약 : #at <시간>
 * 예) # at 3:00am tomorrow -> 내일 새벽 3시
		 # at now + 1 hours -> 1시간 후
 * at> 프롬프트에 예약 명령어 입력 후 [Enter]
 * 완료되면 [Ctrl] + [D]
 * 확인 : #at - l
 * 취소 #atrm <작업번호>

* systemctl status [데몬(서비스)] - 해당 서비스가 현재 실행되고있는 상태인지 알수있다.
-> cron 과 at은 서비스로 실행되는것이기 때문에 해당 서비스가 실행되고있는지 여부 확인을 반드시 해야한다.
* systemctl restart - 서비스 재시작

-> cron 명령어 파일을 만들면 서비스 재시작을 해야함!

* date 011503002026
-> 그 시점으로 날짜가 바뀐다
-> 잘안되면 앞에 sudo 써서 해보자

* apt-get -y install rdate at

실습시에 cron이 안되었는데 이유를 모르겠음.

--------------------

네트워크 관련 필수개념 ①

TCP/IP
- 컴퓨터끼리 네트워크 상으로 의사소통을 하는 '프로토콜'중 가장 널리 사용되는 프로토콜의 한 종류

호스트이름, 도메인 이름
- 호스트이름은 각각의 컴퓨터에 지정된 이름
- 도메인 이름(또는 도메인 주소)는 hanbit.co.kr과 같은 형식

IP주소
- 각 컴퓨터의 랜카드에 부여되는 중복되지 않는 유일한 주소
- 4바이트로 이루어져 있으며, 각 자리는 0 ~ 255 까지의 숫자
- 예) Server IP 주소는 192.168.111.100

네트워크 주소
- 같은 네트워크에 속해 있는 공통된 주소 (예 : 192.168.111.0)

네트워크 관련 필수개념 ②

브로드캐스트 주소
- 내부 네트워크의 모든 컴퓨터가 듣게 되는 주소
- 현재 주소의 제일 끝자리를 255로 바꾼 주소(C클래스)

게이트웨이, 라우터
- 라우터 = 게이트웨이
- 네트워크 간에 데이터를 전송하는 컴퓨터 또는 장비
- VMware의 게이트웨이 주소는 192.168.111.2로 고정

넷마스크 & 클래스
- 넷마스크 : 네트워크의 규모를 결정 (예: 255.255.255.0 - C클래스)

DNS 서버 주소
- URL을 해당 컴퓨터의 IP주소로 변환해 주는 서버
- 설정파일은 [[/etc/resolv.conf]]
- VMware를 사용하면 VMware가 192.168.111.2번을 게이트웨이 및 DNS 서버로, 192.168.111.254를 DHCP 서버로 설정함

네트워크 관련 필수개념 ③

리눅스에서의 네트워크 장치 이름
- 우분투는 랜카드를 ens32 또는 ens33으로 할당함
- 명령 예
# ifconfig ens32 또는 ens33 - 네트워크 설정 정보를 출력
# ifdown ens32  또는 ens33 - 네트워크 장치를 정지
# ifup ens32 또는 ens33 - 네트워크 장치를 가동

* ens32 or ens33은 VMware상에서 그렇고, 실제로는 이름이 다를 수 있음.


중요한 네트워크 관련 명령어 ①

nm-connection-editor
- 네트워크와 관련된 대부분의 작업을 이 명령어에서 수행
# 자동 IP주소 또는 고정 IP주소 사용 결정
# IP주소, 서브넷 마스크, 게이트웨이 정보 입력
# DNS 정보 입력
# 네트워크 카드 드라이버 설정
# 네트워크 장치(ens32)의 설정
- GUI 기반으로 작동함

* 텍스트 모드는 nmtui 명령어를 사용한다.

systemctl <start/stop/restart/status> network
- 네트워크 설정을 변경한 후에, 변경된 내용을 시스템에 적용시키는 명령어


중요한 네트워크 관련 명령어 ②

ifconfig <장치이름>
- 장치의 IP주소 설정 정보를 출력

nslookup
- DNS 서버의 작동을 테스트하는 명령어

ping <IP주소 또는 URL>
- 해당 컴퓨터가 네트워크상에서 응답하는지를 테스트하는 간편한 명령어

네트워크 설정과 관련된 주요 파일

네트워크 기본 정보가 설정된 파일
- X 윈도 모드: Server, Clinet
# '/etc/NetworkManager/system-connections/유선 연결 1'파일
- 텍스트 모드 : Server(B)
# [[/etc/network/interfaces]] 파일

[[/etc/resolv.conf]]
- DNS 서버의 정보 및 호스트 이름이 들어 있는 파일(임시)
# 영구적으로 DNS 서버정보를 변경하려면 nm-connection-editor 명령이나 [[/etc/network/interfaces파일을]] 직접 편집해야 함.

[[/etc/hosts]]
- 현 컴퓨터의 호스트 이름 및 FQDN이 들어 있는 파일

* kt에서 공용으로 쓰는 nameserver 168.126.63.1
-> 작동하는지 확인하고싶을때 써도 됨

--------------------

파이프, 필터, 리디렉션

파이프
- 두 개의 프로그램을 연결해 주는 연결통로의 의미
- "|" 문자를 사용함
- 예) #ls -l [[/etc]] | more

필터
- 필요한 것만 걸러 주는 명령어
- grep, tail, wc, sort, grep, awk, sed 등
- 주로 파이프와 같이 사용
- 예 ) # ps - ef | grep bash

리디렉션
- 표준 입출력의 방향을 바꿔 줌
- 예) ls -l > list.txt
	   soft < list.txt> out.txt


프로세스, 데몬 ①

정의
- 하드디스크에 저장된 실행코드(프로그램)가, 메모리에 로딩되어 활성화된 것

포그라운드 프로세스
- 실행하면 화면에 나타나서 사용자와 상호작용을 하는 프로세스
- 대부분의 응용프로그램

백그라운드 프로세스
- 실행은 되었지만, 화면에는 나타나지 않고, 실행되는 프로세스
- 백신 프로그램, 서버 데몬 등

프로세스 번호
- 각각의 프로세스에 할당된 고유번호

작업 번호
- 현재 실행되고 있는 백그라운드 프로세스의 순차번호


프로세스, 데몬 ②

부모 프로세스와 자식 프로세스
- 모든 프로세스는 부모 프로세스를 가지고 있음
- 부모 프로세스를 kill 하면, 자식 프로세스도 자동으로 kill 됨

프로세스 관련 명령
- ps
# 현재 프로세스의 상태를 확인하는 명령어
# "ps -ef | grep <프로세스이름>" 을 주로 사용함
- kill
# 프로세스를 강제로 종료하는 명령어
# "kill -9 <프로세스 번호>"는 강제 종료
-pstree
# 부모 프로세스와 자식 프로세스의 관계를 트리 형태로 보여 줌



서비스와 소켓 

서비스
- 시스템과 독자적으로 구동되어 제공하는 프로세스를 말한다. 예로 웹 서버, DB 서버, FTP 서버 등이 있다.
- 실행 및 종료는 대개 'systemctl start/stop/restart 서비스이름' 으로 사용된다.
- 서비스의 실행 스크립트 파일은 [[/lib/systemd/ststem/디렉토리에]] '서비스이름. service'라는 이름으로 확인할 수 있다. 예로 Cron 서비스는 cron.service라는 이름의 파일로 존재한다.
- 부팅과 동시에 서비스의 자동 실행 여부를 지정할 수 있는데, 터미널에서 sytstemctl list-unit-files 명령을 실행하면 현재 사용(enabled)과 사용안함(disabled)을 확인할 수 있다. 또 rcconf 명령으로 설정할 수도 있다.

* apt-get install rcconf


소켓
- 서비스는 항상 가동되지만, 소켓은 외부에서 특정 서비스를 요청할 경우에 systemd가 구동시킨다. 그리고 요청이 끝나면 소켓도 종료된다.
- 그래서 소켓으로 설정된 서비스를 요청할 때는 처음 연결되는 시간이 앞에서 설명한 서비스에 비교했을 때 약간 더 걸릴 수 있다. 왜냐하면 systemd가 서비스를 새로 구동하는 데 시간이 소요되기 때문이다. 이와 같은 소켓의 대표적인 예로 텔넷 서버를 들 수 있다.
- 소켓과 관련된 스크립트 파일은 [[/lib/systemd/system/]] 디렉토리에 소켓이름.socket라는 이름으로 존재한다.

* 예전 우분투에서는 소켓과 비슷한 개념으로 xinetd 데몬이 주로 사용되었다.
* Ubuntu 16.04 LTS도 xinetd 데몬을 지원한다. 하지만 많은 서비스가 xinetd 대신에 소켓으로 사용된다.



















































