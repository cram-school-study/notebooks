Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-08-24T13:55:07+09:00

====== 월요일 24 8 2020 ======

파이썬

- 프로젝트 

자바

배열과 리스트의 차이 알아볼것.
- https://codingfun.tistory.com/117
- https://wayhome25.github.io/cs/2017/04/17/cs-18-1/

- 배열 - 크기가 정해져있음. 인덱스를 가진다.
		 - 인덱스 활용하여 조회가 빠름.
		 - 길이 변경이 불가능

- 리스트 - 순서가 있는 데이터의 모임
			 - 인덱스는 몇번째 데이터인가 정도의 의미

→ 기존 위치에 데이터를 삽입하는경우, 삭제되고 남아 있는 공간을 그대로 두는경우 -> 배열

	삽입위치가 기존 데이터를 한칸 밀어야 할 경우, 삭제 후 한칸씩 앞으로 밀어서 메워야하는경우 -> 리스트
             


null
--------------------
String a;               - a 변수 선언, 초기화 x, 메모리 할당 x
String a ="";         - a 변수 선언, 초기화 "", 메모리 할당 ok
String a = null;     - a 변수 선언, 초기화 null, 메모리 할당 x
차이점들

자바에서 null은 예약어로써, JVM내에 항상 존재하는 오브젝트이다.
syso( (Object)null )이것이 실행되는것들 보면 Object형태라는것을 알 수 있다.

다만, 자바에서 null이 오브젝트라서 특이한일이 생긴다.
null이 오브젝트이니 객체형태이고, 자바에서는 객체에 toString()을 지원한다.
그리고 JVM에서 암시적으로 null의 toString()을 실행했을때만 실행된다.

ex)
syso에서 a변수는 null로 출력이 되고, a + 10 일시 null10으로 출력이 됨.

다만, syso( ((Object)null).toString() + "10" )
과 같이 임의적으로 호출한것은 출력이 되지않음.
->자바 설계자들의 노림수?

이것은 str ==nul || str.equals("")의 사용을 부추긴다.
-> str == null은 괜찮으나, equlas은 내부적으로 로직이 복잡해 딜레이가 많이 걸리며, 힙 영역에서도 사용하므로, 메모리가 낭비됨
   다만, null은 NullPointException이 발생하는경우가많으므로, 간편하게 사용하기위해 ""을 많이 사용한다.

  → 자바 6 버전 아래  = str.trim().length() - 길이 0이면 true, 그외 false
  → 자바 6 버전 이상  = str.trim().isEmpty() - 빈값이면 true, 그외 false
  → 자바 11 버전 이상 = str.isBlank() - 띄어쓰기 자동제거후 빈값이면 true, 그외 false
  -----> 이상적인 String의 선언 및 비교

[[NullPointException]] 포함 몇가지의 Exception은 catch를 해주지 않으면, JVM의 메모리 관리대상에서 빠지기 때문에 가비지 콜렉션이 되지않아, 추후에는 out of memory상태가 되어버릴수 있기때문에 관리가 필요하다.

* str == null이 꼭 필요한부분은 비교하여 Exception을 발생시킬 경우이다.

--------------------



배열 선언시 변수별 초기화 값
int - 0, double - 0.0 ...... boolean - false, String - null


자바 cmd 상에서 main함수 실행시키는법 
— java bin폴더(패키지는 경로 이동하면안됨) 에서 java 클래스 파라미터1 파라미터 2
— 파라미터를 괄호를 쓰지않고 띄어쓰기로 구분.
